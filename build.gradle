plugins {
    id 'java'
    id 'io.quarkus'
    id 'pmd'
    id 'com.diffplug.spotless' version '7.0.0.BETA1'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation 'io.quarkus:quarkus-smallrye-openapi'
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-rest'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-rest-jackson'
    implementation 'io.quarkus:quarkus-redis-client'
    implementation 'io.quarkus:quarkus-rest-client-jackson'
    implementation 'io.quarkus:quarkus-smallrye-fault-tolerance'

    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.quarkus:quarkus-junit5-mockito'
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'io.quarkus:quarkus-jacoco'
}

group 'com.duquejo'
version '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
    jvmArgs "-XX:+EnableDynamicAgentLoading"
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

pmd {
    toolVersion = "${pdmVersion}"
    ignoreFailures = true
}

spotless {
    java {
        target fileTree('.') {
            include '**/*.java'
            exclude '**/build/**', '**/build-*/**'
        }
        toggleOffOn()
        importOrder()
        removeUnusedImports()
        palantirJavaFormat().style("GOOGLE").formatJavadoc(true)
        trimTrailingWhitespace()
        endWithNewline()
        formatAnnotations()
        licenseHeader('/* (C) @duquejo $YEAR */')
    }
}